<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

	<parameters>
		<!-- Filter Interface -->
		<parameter key="calliope_framework.default_filter.class">Calliope\Core\Filter</parameter>
		<!-- Filter Factory -->
		<parameter key="calliope_framework.filter_chain_factory.class">Calliope\Core\Filter\Factory\ChainedFilterFactory</parameter>
		<parameter key="calliope_framework.connection_filter_factory.class">Calliope\Core\Filter\Factory\ConnectionFilterFactory</parameter>
		<parameter key="calliope_framework.event_dispatcher_filter_factory.class">Calliope\Bridge\SymfonyComponents\Filter\Factory\EventDispatcherFilterFactory</parameter>
		<!-- FilterListener Registry -->
		<parameter key="calliope_framework.filter_listener_registry.class">Clio\Bridge\SymfonyComponents\Registry\AliasContainerRegistry</parameter>

		<!-- FilterListener -->
		<parameter key="calliope_framework.default_filter_listener.class">stdClass</parameter>
		<parameter key="calliope_framework.filter_listener_factory_collection.class">Calliope\Bridge\SymfonyComponents\Filter\ListenerFactory\FactoryMap</parameter>
		<parameter key="calliope_framework.filter_listener_class_factory.class">Calliope\Extra\Filter\ListenerFactory\ClassFactory</parameter>
		<parameter key="calliope_framework.cache_filter_listener_factory.class">Calliope\Extra\Filter\ListenerFactory\CacheFactory</parameter>
		<parameter key="calliope_framework.search_filter_listener_factory.class">Calliope\Extra\Filter\ListenerFactory\SearchFactory</parameter>
	</parameters>

	<services>
		<service
			id="calliope_framework.default_filter"
			class="%calliope_framework.default_filter.class%"
			factory-service="calliope_framework.filter_chain_factory"
			factory-method="createChainedFilter"
		>
			<argument></argument><!-- options -->
		</service>

		<!-- Filter Factory -->
		<service
			id="calliope_framework.filter_chain_factory"
			class="%calliope_framework.filter_chain_factory.class%"
		>
		</service>

		<service
			id="calliope_framework.filter_factory.event_dispatcher"
			class="%calliope_framework.event_dispatcher_filter_factory.class%"
		>
			<!-- Prepend the created filter -->
			<tag name="calliope_framework.filter_chain_factory" position="first"/>
		</service>
		<service
			id="calliope_framework.filter_factory.connection"
			class="%calliope_framework.connection_filter_factory.class%"
		>
			<!-- Append the created filter -->
			<tag name="calliope_framework.filter_chain_factory" position="last"/>
		</service>

		<!-- ConnectionFilterListener -->
		<service
			id="calliope_framework.default_connection_filter_listener"
			class="%calliope_framework.default_filter_listener.class%"
			factory-service="calliope_framework.filter_listener_registry"
			factory-method="get"
		>
			<argument></argument><!-- name of the listener -->
		</service>


		<service
			id="calliope_framework.filter_listener_registry"
			class="%calliope_framework.filter_listener_registry.class%"
		>
			<argument type="service" id="service_container"/>
		</service>

		<!-- FilterListener -->
		<service
			id="calliope_framework.default_filter_listener"
			class="%calliope_framework.default_filter_listener.class%"
			factory-service="calliope_framework.filter_listener_factory"
			factory-method="createFilterListener"
		>
			<argument></argument><!-- type -->
			<argument></argument><!-- arguments -->
		</service>
		<!-- FilterListener Factory -->
		<service
			id="calliope_framework.filter_listener_factory"
			alias="calliope_framework.filter_listener_factory_collection"
		/>

		<service
			id="calliope_framework.filter_listener_factory_collection"
			class="%calliope_framework.filter_listener_factory_collection.class%"
		>
		</service>

		<service
			id="calliope_framework.filter_listener_factory.class"
			class="%calliope_framework.filter_listener_class_factory.class%"
		>
			<tag name="calliope_framework.filter_listener_factory" for="class"/>
		</service>
	</services>
</container>
