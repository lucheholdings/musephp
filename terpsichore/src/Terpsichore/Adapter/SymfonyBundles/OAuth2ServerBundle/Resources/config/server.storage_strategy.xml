<?xml version="1.0" encoding="UTF-8" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

	<parameters>
		<!-- StorageStrategy Classes -->
		<parameter key="terpsichore_oauth2_server.storage_strategy.token.class">Terpsichore\Adapter\SymfonyBundles\OAuth2ServerBundle\Storage\Strategy\TokenManagerStrategy</parameter>
		<parameter key="terpsichore_oauth2_server.storage_strategy.user_credentials.class">Terpsichore\Adapter\SymfonyBundles\OAuth2ServerBundle\Storage\Strategy\ChainUserProviderStrategy</parameter>
		<parameter key="terpsichore_oauth2_server.storage_strategy.client.class">Terpsichore\Adapter\SymfonyBundles\OAuth2ServerBundle\Storage\Strategy\ClientProviderStrategy</parameter>
		<parameter key="terpsichore_oauth2_server.storage_strategy.jwt.class">Terpsichore\Adapter\SymfonyBundles\OAuth2ServerBundle\Storage\Strategy\JwtManagerStrategy</parameter>
		<parameter key="terpsichore_oauth2_server.storage_strategy.scope.class">Terpsichore\Adapter\SymfonyBundles\OAuth2ServerBundle\Storage\Strategy\ScopeManagerStrategy</parameter>

		<!-- Strategy Factories -->
		<parameter key="terpsichore_oauth2_server.storage_strategy_factory.alias.class">Terpsichore\Adapter\SymfonyBundles\OAuth2ServerBundle\Storage\Strategy\Factory\ServiceStrategyFactory</parameter>
		<parameter key="terpsichore_oauth2_server.typed_storage_strategy_factory.class">Terpsichore\Adapter\SymfonyBundles\OAuth2ServerBundle\Storage\Strategy\Factory\TypedStrategyFactory</parameter>
	</parameters>
	<services>
		<!-- Strategy Factory -->
		<service
			id="terpsichore_oauth2_server.storage_strategy_factory.token" 
			class="%terpsichore_oauth2_server.typed_storage_strategy_factory.class%"
		>
		</service>
		<service
			id="terpsichore_oauth2_server.storage_strategy_factory.client" 
			class="%terpsichore_oauth2_server.typed_storage_strategy_factory.class%"
		>
		</service>
		<service
			id="terpsichore_oauth2_server.storage_strategy_factory.user_credentials" 
			class="%terpsichore_oauth2_server.typed_storage_strategy_factory.class%"
		>
		</service>

		<service
			id="terpsichore_oauth2_server.storage_strategy_factory.alias"
			class="%terpsichore_oauth2_server.storage_strategy_factory.alias.class%"
		>
			<argument type="service" id="service_container"/>
			<tag name="terpsichore_oauth2_server.storage_strategy_factory.token" for="alias"/>
			<tag name="terpsichore_oauth2_server.storage_strategy_factory.client" for="alias"/>
			<tag name="terpsichore_oauth2_server.storage_strategy_factory.user_credentials" for="alias"/>
		</service>

		<!-- StorageStrategy -->
        <service 
			id="terpsichore_oauth2_server.storage_strategy.access_token.default" 
			class="%terpsichore_oauth2_server.storage_strategy.token.class%" 
			public="false"
			factory-service="terpsichore_oauth2_server.storage_strategy_factory.token"
			factory-method="createTokenManager"
		>
            <argument></argument><!-- store type -->
            <argument></argument><!-- connect to -->
            <argument type="collection"></argument><!-- options -->
        </service>
        <service 
			id="terpsichore_oauth2_server.storage_strategy.refresh_token.default" 
			class="%terpsichore_oauth2_server.storage_strategy.token.class%" 
			public="false"
			factory-service="terpsichore_oauth2_server.storage_strategy_factory.token"
			factory-method="createTokenManager"
		>
            <argument></argument><!-- store type -->
            <argument></argument><!-- connect to -->
            <argument type="collection"></argument><!-- options -->
        </service>
        <service 
			id="terpsichore_oauth2_server.storage_strategy.authorization_code.default" 
			class="%terpsichore_oauth2_server.storage_strategy.token.class%" 
			public="false"
			factory-service="terpsichore_oauth2_server.storage_strategy_factory.token"
			factory-method="createTokenManager"
		>
            <argument></argument><!-- store type -->
            <argument></argument><!-- connect to -->
            <argument type="collection"></argument><!-- options -->
        </service>
        <service 
			id="terpsichore_oauth2_server.storage_strategy.user_credentials.default" 
			class="%terpsichore_oauth2_server.storage_strategy.user_credentials.class%" 
			public="false"
			factory-service="terpsichore_oauth2_server.storage_strategy_factory.user_credentials"
			factory-method="createUserProvider"
		>
            <argument></argument><!-- store type -->
            <argument></argument><!-- connect to -->
            <argument type="collection"></argument><!-- options -->
        </service>
        <service 
			id="terpsichore_oauth2_server.storage_strategy.client.default" 
			class="%terpsichore_oauth2_server.storage_strategy.client.class%" 
			public="false"
			factory-service="terpsichore_oauth2_server.storage_strategy_factory.client"
			factory-method="createClientProvider"
		>
            <argument></argument><!-- store type -->
            <argument></argument><!-- connect to -->
            <argument type="collection"></argument><!-- options -->
        </service>
    </services>
</container>


