<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources</parameter>
    <parameter key="kernel.environment">test</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">Resources</parameter>
    <parameter key="kernel.cache_dir">/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/cache/test</parameter>
    <parameter key="kernel.logs_dir">/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="TestBundle">Symfony\Bundle\AsseticBundle\Tests\TestBundle\TestBundle</parameter>
      <parameter key="ClioComponentBundle">Clio\Adapter\SymfonyBundles\ComponentBundle\ClioComponentBundle</parameter>
      <parameter key="EratoFrameworkBundle">Erato\Adapter\SymfonyBundles\FrameworkBundle\EratoFrameworkBundle</parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">ResourcesTestDebugProjectContainer</parameter>
    <parameter key="controller_resolver.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver</parameter>
    <parameter key="controller_name_converter.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser</parameter>
    <parameter key="response_listener.class">Symfony\Component\HttpKernel\EventListener\ResponseListener</parameter>
    <parameter key="streamed_response_listener.class">Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</parameter>
    <parameter key="locale_listener.class">Symfony\Component\HttpKernel\EventListener\LocaleListener</parameter>
    <parameter key="event_dispatcher.class">Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher</parameter>
    <parameter key="http_kernel.class">Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel</parameter>
    <parameter key="filesystem.class">Symfony\Component\Filesystem\Filesystem</parameter>
    <parameter key="cache_warmer.class">Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate</parameter>
    <parameter key="cache_clearer.class">Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer</parameter>
    <parameter key="file_locator.class">Symfony\Component\HttpKernel\Config\FileLocator</parameter>
    <parameter key="uri_signer.class">Symfony\Component\HttpKernel\UriSigner</parameter>
    <parameter key="request_stack.class">Symfony\Component\HttpFoundation\RequestStack</parameter>
    <parameter key="fragment.handler.class">Symfony\Component\HttpKernel\Fragment\FragmentHandler</parameter>
    <parameter key="fragment.renderer.inline.class">Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.class">Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.renderer.esi.class">Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="translator.class">Symfony\Bundle\FrameworkBundle\Translation\Translator</parameter>
    <parameter key="translator.identity.class">Symfony\Component\Translation\IdentityTranslator</parameter>
    <parameter key="translator.selector.class">Symfony\Component\Translation\MessageSelector</parameter>
    <parameter key="translation.loader.php.class">Symfony\Component\Translation\Loader\PhpFileLoader</parameter>
    <parameter key="translation.loader.yml.class">Symfony\Component\Translation\Loader\YamlFileLoader</parameter>
    <parameter key="translation.loader.xliff.class">Symfony\Component\Translation\Loader\XliffFileLoader</parameter>
    <parameter key="translation.loader.po.class">Symfony\Component\Translation\Loader\PoFileLoader</parameter>
    <parameter key="translation.loader.mo.class">Symfony\Component\Translation\Loader\MoFileLoader</parameter>
    <parameter key="translation.loader.qt.class">Symfony\Component\Translation\Loader\QtFileLoader</parameter>
    <parameter key="translation.loader.csv.class">Symfony\Component\Translation\Loader\CsvFileLoader</parameter>
    <parameter key="translation.loader.res.class">Symfony\Component\Translation\Loader\IcuResFileLoader</parameter>
    <parameter key="translation.loader.dat.class">Symfony\Component\Translation\Loader\IcuDatFileLoader</parameter>
    <parameter key="translation.loader.ini.class">Symfony\Component\Translation\Loader\IniFileLoader</parameter>
    <parameter key="translation.loader.json.class">Symfony\Component\Translation\Loader\JsonFileLoader</parameter>
    <parameter key="translation.dumper.php.class">Symfony\Component\Translation\Dumper\PhpFileDumper</parameter>
    <parameter key="translation.dumper.xliff.class">Symfony\Component\Translation\Dumper\XliffFileDumper</parameter>
    <parameter key="translation.dumper.po.class">Symfony\Component\Translation\Dumper\PoFileDumper</parameter>
    <parameter key="translation.dumper.mo.class">Symfony\Component\Translation\Dumper\MoFileDumper</parameter>
    <parameter key="translation.dumper.yml.class">Symfony\Component\Translation\Dumper\YamlFileDumper</parameter>
    <parameter key="translation.dumper.qt.class">Symfony\Component\Translation\Dumper\QtFileDumper</parameter>
    <parameter key="translation.dumper.csv.class">Symfony\Component\Translation\Dumper\CsvFileDumper</parameter>
    <parameter key="translation.dumper.ini.class">Symfony\Component\Translation\Dumper\IniFileDumper</parameter>
    <parameter key="translation.dumper.json.class">Symfony\Component\Translation\Dumper\JsonFileDumper</parameter>
    <parameter key="translation.dumper.res.class">Symfony\Component\Translation\Dumper\IcuResFileDumper</parameter>
    <parameter key="translation.extractor.php.class">Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor</parameter>
    <parameter key="translation.loader.class">Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader</parameter>
    <parameter key="translation.extractor.class">Symfony\Component\Translation\Extractor\ChainExtractor</parameter>
    <parameter key="translation.writer.class">Symfony\Component\Translation\Writer\TranslationWriter</parameter>
    <parameter key="property_accessor.class">Symfony\Component\PropertyAccess\PropertyAccessor</parameter>
    <parameter key="debug.errors_logger_listener.class">Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</parameter>
    <parameter key="debug.event_dispatcher.class">Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher</parameter>
    <parameter key="debug.stopwatch.class">Symfony\Component\Stopwatch\Stopwatch</parameter>
    <parameter key="debug.container.dump">/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/cache/test/ResourcesTestDebugProjectContainer.xml</parameter>
    <parameter key="debug.controller_resolver.class">Symfony\Component\HttpKernel\Controller\TraceableControllerResolver</parameter>
    <parameter key="debug.debug_handlers_listener.class">Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</parameter>
    <parameter key="kernel.secret">xxxxxxxxxx</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="security.secure_random.class">Symfony\Component\Security\Core\Util\SecureRandom</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="router.class">Symfony\Bundle\FrameworkBundle\Routing\Router</parameter>
    <parameter key="router.request_context.class">Symfony\Component\Routing\RequestContext</parameter>
    <parameter key="routing.loader.class">Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader</parameter>
    <parameter key="routing.resolver.class">Symfony\Component\Config\Loader\LoaderResolver</parameter>
    <parameter key="routing.loader.xml.class">Symfony\Component\Routing\Loader\XmlFileLoader</parameter>
    <parameter key="routing.loader.yml.class">Symfony\Component\Routing\Loader\YamlFileLoader</parameter>
    <parameter key="routing.loader.php.class">Symfony\Component\Routing\Loader\PhpFileLoader</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.cache_warmer.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer</parameter>
    <parameter key="router.options.matcher.cache_class">ResourcesTestUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">ResourcesTestUrlGenerator</parameter>
    <parameter key="router_listener.class">Symfony\Component\HttpKernel\EventListener\RouterListener</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/config/routing.yml</parameter>
    <parameter key="router.cache_class_prefix">ResourcesTest</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="annotations.reader.class">Doctrine\Common\Annotations\AnnotationReader</parameter>
    <parameter key="annotations.cached_reader.class">Doctrine\Common\Annotations\CachedReader</parameter>
    <parameter key="annotations.file_cache_reader.class">Doctrine\Common\Annotations\FileCacheReader</parameter>
    <parameter key="clio_component.cache.factory.doctrine.class">Clio\Bridge\DoctrineCommon\Cache\Factory\DoctrineCacheFactory</parameter>
    <parameter key="clio_component.cache.provider_factory.doctrine.class">Clio\Bridge\DoctrineCommon\Cache\Factory\DoctrineCacheProviderFactory</parameter>
    <parameter key="clio_component.normalizer.class">Clio\Component\Tool\Normalizer\Normalizer</parameter>
    <parameter key="clio_component.normalizer.strategy_collection.class">Clio\Component\Tool\Normalizer\Strategy\PriorityCollection</parameter>
    <parameter key="clio_component.normalizer.scalar_strategy.class">Clio\Component\Tool\Normalizer\Strategy\ScalarStrategy</parameter>
    <parameter key="clio_component.normalizer.reference_strategy.class">Clio\Component\Tool\Normalizer\Strategy\ReferenceStrategy</parameter>
    <parameter key="clio_component.normalizer.datetime_strategy.class">Clio\Component\Tool\Normalizer\Strategy\DateTimeStrategy</parameter>
    <parameter key="clio_component.normalizer.array_access_strategy.class">Clio\Component\Tool\Normalizer\Strategy\ArrayAccessStrategy</parameter>
    <parameter key="clio_component.normalizer.std_class_strategy.class">Clio\Component\Tool\Normalizer\Strategy\StdClassStrategy</parameter>
    <parameter key="clio_component.normalizer.jms_serializer_strategy.class">Clio\Bridge\JMSSerializer\Normalizer\JMSSerializerStrategy</parameter>
    <parameter key="erato_framework.event_listener.exception_listener.class">Erato\Adapter\SymfonyBundles\FrameworkBundle\EventListener\ExceptionListener</parameter>
    <parameter key="erato_framework.service_registry.class">Clio\Bridge\SymfonyDI\Registry\ServiceContainerRegistry</parameter>
    <parameter key="erato_framework.factory_map.class">Clio\Component\Pattern\Factory\NamedCollection</parameter>
    <parameter key="erato_framework.component_factory.class">Clio\Component\Pattern\Factory\ComponentFactory</parameter>
    <parameter key="erato_framework.doctrine_cache_factory.class">Erato\Adapter\SymfonyBundles\FrameworkBundle\Cache\DoctrineCacheFactory</parameter>
    <parameter key="erato_framework.metadata.registry.class">Clio\Extra\Metadata\SchemaRegistry</parameter>
    <parameter key="erato_framework.metadata.registry.cache_loader.class">Clio\Extra\Registry\Loader\CachedLoader</parameter>
    <parameter key="erato_framework.metadata.registry.factory_loader.class">Clio\Component\Pattern\Registry\Loader\MappedFactoryLoader</parameter>
    <parameter key="erato_framework.metadata.class_metadata_factory.class">Clio\Component\Util\Metadata\Schema\Factory\ClassMetadataFactory</parameter>
    <parameter key="erato_framework.metadata.mapped_factory_loader.class">Clio\Component\Pattern\Registry\Loader\MappedFactoryLoader</parameter>
    <parameter key="erato_framework.metadata.mapping_factory_collection.class">Clio\Component\Util\Metadata\Mapping\Factory\Collection</parameter>
    <parameter key="erato_framework.metadata.accessor_mapping_factory.class">Erato\Core\Metadata\Mapping\Factory\AccessorMappingFactory</parameter>
    <parameter key="erato_framework.metadata.attribute_map_mapping_factory.class">Erato\Core\Metadata\Mapping\Factory\AttributeMapMappingFactory</parameter>
    <parameter key="erato_framework.metadata.tag_set_mapping_factory.class">Erato\Core\Metadata\Mapping\Factory\TagSetMappingFactory</parameter>
    <parameter key="erato_framework.metadata.rebuilder.class">Clio\Component\Util\Metadata\Tool\MetadataRebuilder</parameter>
    <parameter key="erato_framework.metadata.cache_clearer.class">Erato\Adapter\SymfonyBundles\FrameworkBundle\Cache\CacheClearer</parameter>
    <parameter key="erato_framework.accessor.registry.class">Erato\Core\Accessor\SchemaAccessorRegistry</parameter>
    <parameter key="erato_framework.accessor.schema_accessor_factory_collection.class">Clio\Component\Util\Accessor\Schema\Factory\SchemaAccessorFactoryCollection</parameter>
    <parameter key="erato_framework.accessor.class_accessor_factory.class">Clio\Component\Util\Accessor\Schema\Factory\BasicClassAccessorFactory</parameter>
    <parameter key="erato_framework.accessor.schema_metadata_accessor_factory.class">Erato\Core\Accessor\Schema\Factory\SchemaMetadataAccessorFactory</parameter>
    <parameter key="erato_framework.accessor.field_accessor_factory_collection.class">Clio\Component\Util\Accessor\Field\Factory\FieldAccessorFactoryCollection</parameter>
    <parameter key="erato_framework.accessor.attribute_map_field_accessor_factory.class">Erato\Core\Accessor\Field\Factory\AttributeMapAccessorFactory</parameter>
    <parameter key="erato_framework.accessor.ignore_field_accessor_factory.class">Clio\Component\Util\Accessor\Field\Factory\IgnoreFieldAccessorFactory</parameter>
    <parameter key="erato_framework.accessor.public_property_field_accessor_factory.class">Clio\Component\Util\Accessor\Field\Factory\PublicPropertyFieldAccessorFactory</parameter>
    <parameter key="erato_framework.accessor.method_field_accessor_factory.class">Clio\Component\Util\Accessor\Field\Factory\MethodFieldAccessorFactory</parameter>
    <parameter key="erato_framework.accessor.tag_set_field_accessor_factory.class">Erato\Core\Accessor\Field\Factory\TagSetFieldAccessorFactory</parameter>
    <parameter key="erato_framework.accessor.schema_accessor.interface">Clio\Component\Util\Accessor\Schema\SimpleSchemaAccessor</parameter>
    <parameter key="erato_framework.accessor.attribute_map_accessor.class">Erato\Core\Accessor\AttributeMapAccessor</parameter>
    <parameter key="erato_framework.accessor.field_accessor_collection.class">Clio\Component\Util\Accessor\Field\FieldAccessorCollection</parameter>
    <parameter key="erato_framework.accessor.ignore_field_accessor.class">Clio\Component\Util\Accessor\Field\Ignore</parameter>
    <parameter key="erato_framework.accessor.public_property_field_accessor.class">Clio\Component\Util\Accessor\Field\PublicPropertyFieldAccessor</parameter>
    <parameter key="erato_framework.accessor.method_field_accessor.class">Clio\Component\Util\Accessor\Field\MethodFieldAccessor</parameter>
    <parameter key="erato_framework.accessor.tag_set_field_accessor.class">Erato\Core\Accessor\Field\TagSetFieldAccessor</parameter>
    <parameter key="erato_framework.normalizer.class">Clio\Component\Tool\Normalizer\Normalizer</parameter>
    <parameter key="erato_framework.normalizer.strategy_collection.class">Clio\Component\Tool\Normalizer\Strategy\PriorityCollection</parameter>
    <parameter key="erato_framework.normalizer.accessor_strategy.class">Erato\Core\Normalizer\Strategy\AccessorStrategy</parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument>en</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection">
        <argument type="service" id="erato_framework.metadata.cache_clearer"/>
      </argument>
    </service>
    <service id="request" scope="request" synthetic="true" synchronized="true"/>
    <service id="service_container" synthetic="true"/>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>xxxxxxxxxx</argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\Fragment\FragmentHandler">
      <argument type="collection"/>
      <argument>true</argument>
      <argument type="service" id="request_stack"/>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.inline"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.hinclude"/>
      </call>
      <call method="addRenderer">
        <argument type="service" id="fragment.renderer.esi"/>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="uri_signer"/>
      <argument></argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service" id="translator.selector"/>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/cache/test/translations</argument>
        <argument key="debug">true</argument>
      </argument>
    </service>
    <service id="translator" class="Symfony\Component\Translation\IdentityTranslator">
      <argument type="service" id="translator.selector"/>
    </service>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor"/>
    <service id="debug.emergency_logger_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="emergency"/>
      <argument>emergency</argument>
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument>null</argument>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.emergency_logger_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.deprecation_logger_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.scream_logger_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.debug_handlers_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>router_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\RouterListener</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
          <tag name="monolog.logger" channel="request"/>
          <argument type="service" id="service_container"/>
          <argument type="service" id="controller_name_converter"/>
          <argument>null</argument>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.deprecation_logger_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="deprecation"/>
      <argument>deprecation</argument>
      <argument>null</argument>
    </service>
    <service id="debug.scream_logger_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="scream"/>
      <argument>scream</argument>
      <argument>null</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="collection">
        <argument type="service" id="http_kernel" on-invalid="null"/>
        <argument>terminateWithException</argument>
      </argument>
    </service>
    <service id="security.secure_random" class="Symfony\Component\Security\Core\Util\SecureRandom">
      <tag name="monolog.logger" channel="security"/>
      <argument>/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/cache/test/secure_random.seed</argument>
      <argument>null</argument>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="controller_name_converter"/>
      <argument>null</argument>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="clio_component.cache.factory.doctrine" class="Clio\Bridge\DoctrineCommon\Cache\Factory\DoctrineCacheFactory"/>
    <service id="clio_component.cache.provider_factory.doctrine" class="Clio\Bridge\DoctrineCommon\Cache\Factory\DoctrineCacheProviderFactory"/>
    <service id="clio_component.normalizer" class="Clio\Component\Tool\Normalizer\Normalizer">
      <argument type="service" id="clio_component.normalizer.strategy_collection"/>
    </service>
    <service id="clio_component.normalizer.strategy_collection" class="Clio\Component\Tool\Normalizer\Strategy\PriorityCollection"/>
    <service id="clio_component.normalizer.strategy.datetime" class="Clio\Component\Tool\Normalizer\Strategy\DateTimeStrategy">
      <tag name="clio_component.normalizer.strategy" priority="0"/>
    </service>
    <service id="clio_component.normalizer.strategy.reference" class="Clio\Component\Tool\Normalizer\Strategy\ReferenceStrategy">
      <tag name="clio_component.normalizer.strategy" priority="0"/>
    </service>
    <service id="clio_component.normalizer.strategy.std_class" class="Clio\Component\Tool\Normalizer\Strategy\StdClassStrategy">
      <tag name="clio_component.normalizer.strategy" priority="0"/>
    </service>
    <service id="clio_component.normalizer.strategy.scalar" class="Clio\Component\Tool\Normalizer\Strategy\ScalarStrategy">
      <tag name="clio_component.normalizer.strategy" priority="0"/>
    </service>
    <service id="clio_component.normalizer.strategy.jms" class="Clio\Bridge\JMSSerializer\Normalizer\JMSSerializerStrategy">
      <tag name="clio_component.normalizer.strategy" priority="0"/>
      <argument>null</argument>
    </service>
    <service id="erato_framework.service_registry" class="Clio\Bridge\SymfonyDI\Registry\ServiceContainerRegistry">
      <argument type="service" id="service_container"/>
    </service>
    <service id="erato_framework.doctrine_cache_factory" class="Erato\Adapter\SymfonyBundles\FrameworkBundle\Cache\DoctrineCacheFactory">
      <argument type="service" id="service_container"/>
    </service>
    <service id="erato_framework.metadata.registry" class="Clio\Extra\Metadata\SchemaRegistry">
      <argument type="service" id="erato_framework.metadata.registry.cache_loader"/>
    </service>
    <service id="erato_framework.metadata.registry.cache_loader" class="Clio\Extra\Registry\Loader\CachedLoader">
      <argument type="service" id="erato_framework.metadata.registry.factory_loader"/>
      <argument type="service" id="erato_framework.metadata.registry.cache_loader.cache" on-invalid="null"/>
    </service>
    <service id="erato_framework.metadata.registry.factory_loader" class="Clio\Component\Pattern\Registry\Loader\MappedFactoryLoader">
      <argument type="service" id="erato_framework.metadata.class_metadata_factory"/>
    </service>
    <service id="erato_framework.metadata.class_metadata_factory" class="Clio\Component\Util\Metadata\Schema\Factory\ClassMetadataFactory">
      <argument type="service" id="erato_framework.metadata.mapping_factory.collection"/>
    </service>
    <service id="erato_framework.metadata.mapping_factory.collection" class="Clio\Component\Util\Metadata\Mapping\Factory\Collection">
      <call method="set">
        <argument>attribute</argument>
        <argument type="service" id="erato_framework.metadata.mapping_factory.attribute_map"/>
      </call>
      <call method="set">
        <argument>tag</argument>
        <argument type="service" id="erato_framework.metadata.mapping_factory.tag_set"/>
      </call>
    </service>
    <service id="erato_framework.metadata.default_mapping_factory.accessor" class="Erato\Core\Metadata\Mapping\Factory\AccessorMappingFactory">
      <argument type="service" id="erato_framework.accessor.schema_accessor_factory.metadata" on-invalid="null"/>
      <argument type="service" id="erato_framework.accessor.field_accessor_factory.collection" on-invalid="null"/>
    </service>
    <service id="erato_framework.metadata.mapping_factory.attribute_map" class="Erato\Core\Metadata\Mapping\Factory\AttributeMapMappingFactory">
      <tag name="erato_framework.metadata.mapping_factory" for="attribute"/>
    </service>
    <service id="erato_framework.metadata.mapping_factory.tag_set" class="Erato\Core\Metadata\Mapping\Factory\TagSetMappingFactory">
      <tag name="erato_framework.metadata.mapping_factory" for="tag"/>
    </service>
    <service id="erato_framework.metadata.mapping_injector" class="Clio\Component\Util\Injection\Injector" factory-method="getInjector" factory-service="erato_framework.metadata.mapping_factory"/>
    <service id="erato_framework.metadata.rebuilder" class="Clio\Component\Util\Metadata\Tool\MetadataRebuilder">
      <argument type="service" id="erato_framework.metadata.mapping_injector"/>
    </service>
    <service id="erato_framework.metadata.cache_clearer" class="Erato\Adapter\SymfonyBundles\FrameworkBundle\Cache\CacheClearer">
      <tag name="kernel.cache_clearer"/>
      <argument type="service" id="erato_framework.metadata.registry.cache_loader.cache" on-invalid="null"/>
    </service>
    <service id="erato_framework.metadata.registry.cache_loader.cache" class="Clio\Component\Util\Cache\CacheProvider" factory-method="createCacheProvider" factory-service="erato_framework.cache_factory" public="false">
      <argument>file_system</argument>
      <argument type="collection">
        <argument key="directory">/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/cache/test/erato_framework</argument>
        <argument key="extension">cache.php</argument>
      </argument>
    </service>
    <service id="erato_framework.accessor.registry" class="Erato\Core\Accessor\SchemaAccessorRegistry">
      <argument type="service" id="erato_framework.metadata.registry"/>
    </service>
    <service id="erato_framework.accessor.schema_accessor_factory.collection" class="Clio\Component\Util\Accessor\Schema\Factory\SchemaAccessorFactoryCollection">
      <call method="set">
        <argument>class</argument>
        <argument type="service" id="erato_framework.accessor.schema_accessor_factory.class"/>
        <argument>0</argument>
      </call>
      <call method="set">
        <argument>metadata</argument>
        <argument type="service" id="erato_framework.accessor.schema_accessor_factory.metadata"/>
        <argument>0</argument>
      </call>
    </service>
    <service id="erato_framework.accessor.schema_accessor_factory.class" class="Clio\Component\Util\Accessor\Schema\Factory\BasicClassAccessorFactory">
      <tag name="erato_framework.accessor.schema_accessor_factory" for="class"/>
      <argument type="service" id="erato_framework.accessor.field_accessor_factory.collection"/>
    </service>
    <service id="erato_framework.accessor.schema_accessor_factory.metadata" class="Erato\Core\Accessor\Schema\Factory\SchemaMetadataAccessorFactory">
      <tag name="erato_framework.accessor.schema_accessor_factory" for="metadata"/>
      <argument type="service" id="erato_framework.accessor.field_accessor_factory.collection"/>
    </service>
    <service id="erato_framework.accessor.field_accessor_factory.collection" class="Clio\Component\Util\Accessor\Field\Factory\FieldAccessorFactoryCollection">
      <call method="set">
        <argument>ignore</argument>
        <argument type="service" id="erato_framework.accessor.field_accessor_factory.ignore"/>
        <argument>0</argument>
      </call>
      <call method="set">
        <argument>public_property</argument>
        <argument type="service" id="erato_framework.accessor.field_accessor_factory.public_property"/>
        <argument>0</argument>
      </call>
      <call method="set">
        <argument>method</argument>
        <argument type="service" id="erato_framework.accessor.field_accessor_factory.method"/>
        <argument>0</argument>
      </call>
      <call method="set">
        <argument>tags</argument>
        <argument type="service" id="erato_framework.accessor.field_accessor_factory.tag"/>
        <argument>0</argument>
      </call>
      <call method="set">
        <argument>attributes</argument>
        <argument type="service" id="erato_framework.accessor.field_accessor_factory.attribute"/>
        <argument>0</argument>
      </call>
    </service>
    <service id="erato_framework.accessor.field_accessor_factory.ignore" class="Clio\Component\Util\Accessor\Field\Factory\IgnoreFieldAccessorFactory">
      <tag name="erato_framework.accessor.field_accessor_factory" for="ignore"/>
    </service>
    <service id="erato_framework.accessor.field_accessor_factory.public_property" class="Clio\Component\Util\Accessor\Field\Factory\PublicPropertyFieldAccessorFactory">
      <tag name="erato_framework.accessor.field_accessor_factory" for="public_property"/>
    </service>
    <service id="erato_framework.accessor.field_accessor_factory.method" class="Clio\Component\Util\Accessor\Field\Factory\MethodFieldAccessorFactory">
      <tag name="erato_framework.accessor.field_accessor_factory" for="method"/>
    </service>
    <service id="erato_framework.accessor.field_accessor_factory.tag" class="Erato\Core\Accessor\Field\Factory\TagSetFieldAccessorFactory">
      <tag name="erato_framework.accessor.field_accessor_factory" for="tags"/>
    </service>
    <service id="erato_framework.accessor.field_accessor_factory.attribute" class="Erato\Core\Accessor\Field\Factory\AttributeMapAccessorFactory">
      <tag name="erato_framework.accessor.field_accessor_factory" for="attributes"/>
      <argument></argument>
    </service>
    <service id="erato_framework.normalizer" class="Clio\Component\Tool\Normalizer\Normalizer">
      <argument type="service" id="erato_framework.normalizer.strategy_collection"/>
      <call method="add">
        <argument type="service" id="clio_component.normalizer"/>
      </call>
    </service>
    <service id="erato_framework.normalizer.strategy_collection" class="Clio\Component\Tool\Normalizer\Strategy\PriorityCollection">
      <call method="add">
        <argument type="service" id="erato_framework.normalizer.strategy.accessor"/>
        <argument>100</argument>
      </call>
    </service>
    <service id="erato_framework.normalizer.default_strategy.accessor" class="Erato\Core\Normalizer\Strategy\AccessorStrategy">
      <argument>null</argument>
    </service>
    <service id="erato_framework.normalizer.strategy.accessor" class="Erato\Core\Normalizer\Strategy\AccessorStrategy">
      <tag name="erato_framework.normalizer.strategy" for="accessor" priority="100"/>
      <argument>null</argument>
    </service>
    <service id="router" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="service_container"/>
      <argument>/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/config/routing.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/cache/test</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">ResourcesTestUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">ResourcesTestUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\FileCacheReader">
      <argument type="service">
        <service class="Doctrine\Common\Annotations\AnnotationReader" public="false"/>
      </argument>
      <argument>/Users/yoshi/Workspace/muse/bundle-dev/vendor/musephp/musephp/erato/src/Erato/Adapter/SymfonyBundles/FrameworkBundle/Tests/Resources/cache/test/annotations</argument>
      <argument>true</argument>
    </service>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="clio_component.normalizer.strategy" alias="clio_component.normalizer.strategy_collection"/>
    <service id="clio_component.cache.factory" alias="clio_component.cache.factory.doctrine"/>
    <service id="clio_component.cache.provider_factory" alias="clio_component.cache.provider_factory.doctrine"/>
    <service id="erato_framework.cache_factory" alias="clio_component.cache.provider_factory.doctrine"/>
    <service id="erato_framework.metadata.mapping_factory" alias="erato_framework.metadata.mapping_factory.collection"/>
    <service id="erato_framework.metadata.registry.loader" alias="erato_framework.metadata.registry.cache_loader"/>
    <service id="erato_framework.accessor.schema_accessor_factory" alias="erato_framework.accessor.schema_accessor_factory.collection"/>
    <service id="erato_framework.accessor.field_accessor_factory" alias="erato_framework.accessor.field_accessor_factory.collection"/>
    <service id="erato_framework.normalizer.strategy" alias="erato_framework.normalizer.strategy_collection"/>
  </services>
</container>
