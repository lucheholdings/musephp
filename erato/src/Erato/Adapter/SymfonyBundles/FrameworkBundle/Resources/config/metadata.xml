<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
		<!-- Registry -->
	    <parameter key="erato_framework.metadata.registry.class">Clio\Extra\Metadata\SchemaMetadataRegistry</parameter>
		<!--  -->
	    <parameter key="erato_framework.metadata.registry.cache_loader.class">Clio\Extra\Registry\Loader\CachedLoader</parameter>
	    <parameter key="erato_framework.metadata.registry.factory_loader.class">Clio\Component\Pattern\Registry\Loader\MappedFactoryLoader</parameter>
		
		<!-- -->
        <parameter key="erato_framework.metadata.class_metadata_factory.class">Clio\Component\Util\Metadata\Schema\Factory\ClassMetadataFactory</parameter>
		<!-- Loader -->
        <parameter key="erato_framework.metadata.mapped_factory_loader.class">Clio\Component\Pattern\Registry\Loader\MappedFactoryLoader</parameter>
        <!-- default mapping factory classes -->
		<parameter key="erato_framework.metadata.mapping_factory_collection.class">Clio\Component\Util\Metadata\Mapping\Factory\Collection</parameter>
		<parameter key="erato_framework.metadata.accessor_mapping_factory.class">Erato\Core\Metadata\Mapping\Factory\AccessorMappingFactory</parameter>
		<parameter key="erato_framework.metadata.attribute_map_mapping_factory.class">Erato\Core\Metadata\Mapping\Factory\AttributeMapMappingFactory</parameter>
		<parameter key="erato_framework.metadata.tag_set_mapping_factory.class">Erato\Core\Metadata\Mapping\Factory\TagSetMappingFactory</parameter>

		<!-- Mapping Injector -->
		<parameter key="erato_framework.metadata.cache_warmer.class">Clio\Extra\Metadata\Cache\MetadataCacheWarmer</parameter>

		<parameter key="erato_framework.metadata.cache_clearer.class">Clio\Adapter\SymfonyBundles\ComponentBundle\Cache\CacheProviderClearer</parameter>

    </parameters>

	<services>
		<!-- Metadata Registry with Loader -->
		<service
			id="erato_framework.metadata.registry"
			class="%erato_framework.metadata.registry.class%"
		>
			<argument type="service" id="erato_framework.metadata.registry.loader"/>
		</service>
		<!-- Registry Loader -->
		<!-- Registry Cache Loader -->
		<service
			id="erato_framework.metadata.registry.cache_loader"
			class="%erato_framework.metadata.registry.cache_loader.class%"
		>
			<argument type="service" id="erato_framework.metadata.registry.factory_loader"/>
			<argument type="service" id="erato_framework.metadata.registry.cache_loader.cache" on-invalid="null"/>
			<argument type="service" id="erato_framework.metadata.cache_warmer" on-invalid="null"/>
		</service>

		<service 
			id="erato_framework.metadata.registry.cache_loader.default_cache"
			class="Clio\Component\Util\Cache\CacheProvider" 
			public="false"
			factory-service="erato_framework.cache_factory"
			factory-method="createCacheProvider"
		>
			<argument></argument><!-- type -->
			<argument></argument><!-- arguments -->
		</service>

		<!-- Metadata Loader -->
		<service
			id="erato_framework.metadata.registry.factory_loader"
			class="%erato_framework.metadata.registry.factory_loader.class%"
		>
			<argument type="service" id="erato_framework.metadata.class_metadata_factory"/>
		</service>

		<!-- Class Factory -->
		<service
			id="erato_framework.metadata.class_metadata_factory"
			class="%erato_framework.metadata.class_metadata_factory.class%"
		>
			<argument type="service" id="erato_framework.metadata.mapping_factory.collection"/>
		</service>

		<!-- Mapping Factory -->
		<service
			id="erato_framework.metadata.mapping_factory.collection"
			class="%erato_framework.metadata.mapping_factory_collection.class%"
		>
		</service>
		<service
			id="erato_framework.metadata.default_mapping_factory.accessor"
			class="%erato_framework.metadata.accessor_mapping_factory.class%"
		>
			<argument type="service" id="erato_framework.accessor.schema_accessor_factory.metadata" on-invalid="null"/>
			<argument type="service" id="erato_framework.accessor.field_accessor_factory" on-invalid="null"/>
		</service>
		<service
			id="erato_framework.metadata.mapping_factory.attribute_map"
			class="%erato_framework.metadata.attribute_map_mapping_factory.class%"
		>
			<tag name="erato_framework.metadata.mapping_factory" for="attribute"/>
		</service>
		<service
			id="erato_framework.metadata.mapping_factory.tag_set"
			class="%erato_framework.metadata.tag_set_mapping_factory.class%"
		>
			<tag name="erato_framework.metadata.mapping_factory" for="tag"/>
		</service>
		<service
			id="erato_framework.metadata.mapping_factory"
			alias="erato_framework.metadata.mapping_factory.collection"
		/>

		<!-- Injector -->
		<service
			id="erato_framework.metadata.mapping_injector"
			class="Clio\Component\Util\Injection\Injector"
			factory-service="erato_framework.metadata.mapping_factory"
			factory-method="getInjector"
		>
		</service>
		<!-- Injector Invoker -->
		<service
			id="erato_framework.metadata.cache_warmer"
			class="%erato_framework.metadata.cache_warmer.class%"
		>
			<argument type="service" id="erato_framework.metadata.mapping_injector"/>
		</service>

		<service
			id="erato_framework.metadata.cache_clearer"
			class="%erato_framework.metadata.cache_clearer.class%"
		>
			<argument type="service" id="erato_framework.metadata.registry.cache_loader.cache" on-invalid="null"/>
			<tag name="kernel.cache_clearer"/>
		</service>
	</services>	
</container>
