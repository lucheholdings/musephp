<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
		<!-- MappingFactory classes -->
		<parameter key="erato_framework.schema.mapping_factory.proxy_collection.class">Erato\Adapter\SymfonyBundles\FrameworkBundle\Schema\Mapping\Factory\Collection</parameter>
		<parameter key="erato_framework.schema.identifier_mapping_factory.class">Erato\Core\Schema\Mapping\Factory\IdentifierMappingFactory</parameter>
		<parameter key="erato_framework.schema.attributes_mapping_factory.class">Erato\Core\Schema\Mapping\Factory\AttributesMappingFactory</parameter>
		<parameter key="erato_framework.schema.tags_mapping_factory.class">Erato\Core\Schema\Mapping\Factory\TagsMappingFactory</parameter>

		<parameter key="erato_framework.schema.accessor_mapping_factory.class">Erato\Core\Schema\Mapping\Factory\AccessorMappingFactory</parameter>
		<parameter key="erato_framework.schema.normalizer_mapping_factory.class">Erato\Core\Schema\Mapping\Factory\NormalizerMappingFactory</parameter>
		<parameter key="erato_framework.schema.serializer_mapping_factory.class">Erato\Core\Schema\Mapping\Factory\SerializerMappingFactory</parameter>
		<parameter key="erato_framework.schema.schemifier_mapping_factory.class">Erato\Core\Schema\Mapping\Factory\SchemifierMappingFactory</parameter>
		<parameter key="erato_framework.schema.merger_mapping_factory.class">Erato\Core\Schema\Mapping\Factory\SchemaMergerMappingFactory</parameter>
		<parameter key="erato_framework.schema.replacer_mapping_factory.class">Erato\Core\Schema\Mapping\Factory\SchemaReplacerMappingFactory</parameter>
		<parameter key="erato_framework.schema.schema_mapping_factories" type="collection"></parameter>
		<parameter key="erato_framework.schema.field_mapping_factories" type="collection"></parameter>
    </parameters>

	<services>
		<!-- Mapping Factory -->
		<service
			id="erato_framework.schema.schema_mapping_factory"
			class="%erato_framework.schema.mapping_factory.proxy_collection.class%"
		>
            <argument type="service" id="service_container"/>
            <argument>%erato_framework.schema.schema_mapping_factories%</argument>
		</service>
		<service
			id="erato_framework.schema.field_mapping_factory"
			class="%erato_framework.schema.mapping_factory.proxy_collection.class%"
		>
            <argument type="service" id="service_container"/>
            <argument>%erato_framework.schema.field_mapping_factories%</argument>
		</service>

		<service
			id="erato_framework.schema.mapping_factory.identifier._default"
			class="%erato_framework.schema.identifier_mapping_factory.class%"
            abstract="true"
		>
		</service>

		<service
			id="erato_framework.schema.mapping_factory.tags._default"
			class="%erato_framework.schema.tags_mapping_factory.class%"
            abstract="true"
		>
			<argument>tags</argument>
			<argument>Clio\Component\Tag\SimpleTag</argument>
		</service>
		<service
			id="erato_framework.schema.mapping_factory.attributes._default"
			class="%erato_framework.schema.attributes_mapping_factory.class%"
            abstract="true"
		>
			<argument>attributes</argument>
			<argument>Clio\Component\Attribute\SimpleAttribute</argument>
		</service>
<!--





		<service
			id="erato_framework.schema.default_mapping_factory.attribute_map"
			class="%erato_framework.schema.attribute_map_mapping_factory.class%"
		>
			<argument>attributes</argument>
			<argument>Clio\Component\Attribute\SimpleAttribute</argument>
		</service>

		<service
			id="erato_framework.schema.default_mapping_factory.tag_set"
			class="%erato_framework.schema.tag_set_mapping_factory.class%"
		>
			<argument>tags</argument>
			<argument>Clio\Component\Tag\SimpleTag</argument>
		</service>
		
		<service
			id="erato_framework.schema.default_mapping_factory.accessor"
			class="%erato_framework.schema.accessor_mapping_factory.class%"
		>
			<argument type="service" id="erato_framework.accessor.schema_accessor_factory" on-invalid="null"/>
			<argument type="service" id="erato_framework.accessor.field_accessor_factory" on-invalid="null"/>
			<argument type="service" id="erato_framework.coc" on-invalid="null"/>
		</service>

		<service
			id="erato_framework.schema.default_mapping_factory.normalizer"
			class="%erato_framework.schema.normalizer_mapping_factory.class%"
		>
			<argument type="service" id="erato_framework.container_registry"/>
			<argument></argument>
		</service>

		<service
			id="erato_framework.schema.default_mapping_factory.serializer"
			class="%erato_framework.schema.serializer_mapping_factory.class%"
		>
			<argument type="service" id="erato_framework.container_registry"/>
			<argument></argument>
		</service>

		<service
			id="erato_framework.schema.default_mapping_factory.schemifier"
			class="%erato_framework.schema.schemifier_mapping_factory.class%"
		>
			<argument type="service" id="erato_framework.container_registry"/>
			<argument></argument>
		</service>

		<service
			id="erato_framework.schema.default_mapping_factory.identifier"
			class="%erato_framework.schema.identifier_mapping_factory.class%"
		>
		</service>
		<service
			id="erato_framework.schema.default_mapping_factory.merger"
			class="%erato_framework.schema.merger_mapping_factory.class%"
		>
		</service>
		<service
			id="erato_framework.schema.default_mapping_factory.replacer"
			class="%erato_framework.schema.replacer_mapping_factory.class%"
		>
		</service>
-->
	</services>	
</container>

